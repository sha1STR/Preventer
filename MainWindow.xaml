<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Preventer"
        xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:Collections="clr-namespace:System.Collections;assembly=mscorlib" x:Class="Preventer.MainWindow"
        mc:Ignorable="d"
        Title="Preventer" Height="480" Width="854" ResizeMode="CanMinimize" Icon="Resources/student.png">
    <Window.Resources>
        <SolidColorBrush x:Key="HoveredColor" Color="#CE5B3B"/>
        <SolidColorBrush x:Key="PrimaryTextColor" Color="#223843"/>
        <SolidColorBrush x:Key="PressedColor" Color="#D8B4A0"/>
        <SolidColorBrush x:Key="PrimaryColor" Color="#FFD77A61"/>
        <SolidColorBrush x:Key="BackgroundColor" Color="#DBD3D8"/>

        <Style x:Key="startButtonTheme" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="55 10 0 0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="btnBorder"
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="ContentPresenter"
                                              
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource HoveredColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource PressedColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="selectButtonTheme" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="49 10 0 0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="btnBorder"
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="ContentPresenter"
                                              
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource HoveredColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource PressedColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="tutorialButtonTheme" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="40 10 0 0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="btnBorder"
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="ContentPresenter"
                                              
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource HoveredColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource PressedColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="startAppButtonTheme" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="Width" Value="160"/>
            <Setter Property="Height" Value="60"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="50 10 0 0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="btnBorder"
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="ContentPresenter"
                                              
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource HoveredColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource PressedColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="UpdateButtonTheme" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Width" Value="80"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="14 3 0 0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="btnBorder"
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="ContentPresenter"
                                              
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource HoveredColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource PressedColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OkButtonTheme" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Width" Value="60"/>
            <Setter Property="Height" Value="22"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="20 0 0 0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="0 300 0 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="btnBorder"
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="ContentPresenter"
                                              
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource HoveredColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource PressedColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="#EFF1F3">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="100"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <Label x:Name="bg1" Background="#D8B4A0" Visibility="Hidden"/>
        <Label x:Name="bg2" Background="#D8B4A0" Visibility="Hidden"/>

        <Label Grid.Column="0" Grid.Row="0" Background="#DBD3D8"/>
        <Image Grid.Column="0" Grid.Row="0" Source="/Resources/student.png"/>
        <Label Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Content="Preventer" FontSize="40" Foreground="#223843" Background="#DBD3D8"/>

        <StackPanel x:Name="Menu"
              Grid.Row="1" Grid.Column="0"
              >
            <Button x:Name="startButton"
                Content="Start"
                Click="startButton_Click"
                Style="{DynamicResource startButtonTheme}"
                />
            <Button x:Name="selectButton" 
                Content="Select"
                Click="selectButton_Click"
                Style="{DynamicResource selectButtonTheme}"/>
            <Button x:Name="tutorialButton" 
                Content="Tutorial"
                FontSize="20" 
                Click="tutorialButton_Click" 
                Foreground="#223843" 
                Background="#D77A61"
                BorderThickness="0"
                Style="{DynamicResource tutorialButtonTheme}"
                />
        </StackPanel>
        <Grid x:Name="MainGrid"
              Grid.Row="1" Grid.Column="1">

            <Grid x:Name="startGrid" Visibility="Visible"
              Grid.Column="1" Grid.ColumnSpan="2"
              Grid.Row="1" Grid.RowSpan="4">
                <Grid.RowDefinitions>
                    <RowDefinition Height="100"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Label x:Name="statusLabel" 
               Grid.Row="0" 
               Width="160" 
               Height="60" 
               Content="Disabled" 
               FontSize="30" 
               HorizontalContentAlignment="Center" 
               VerticalContentAlignment="Center" 
               Foreground="Gray"/>

                <Grid x:Name="TimerGrid"
                      Visibility="Hidden"
                    Grid.Row="1"
                    Grid.RowSpan="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center"
                            
                            Orientation="Horizontal"                            >
                        <Label x:Name="TimerText" 
                       Content="Timer:"
                       FontSize="30" 
                        HorizontalContentAlignment="Center" 
                        VerticalContentAlignment="Center" 
                        Foreground="#223843"/>
                        <ListBox x:Name="HoursList"
                             Grid.Column="1"
                             Grid.Row="1"
                             Width="80"
                             ScrollViewer.HorizontalScrollBarVisibility="Hidden"                             
                             Foreground="#223843"
                             FontSize="30" VerticalContentAlignment="Center"
                            />
                        <Label 
                       Content="hours"
                       FontSize="30" 
                        HorizontalContentAlignment="Center" 
                        VerticalContentAlignment="Center" 
                        Foreground="#223843"
                           />
                        <ListBox x:Name="MinutesList"
                             d:ItemsSource="{d:SampleData ItemCount=5}"
                             Grid.Column="1"
                             Grid.Row="1"
                             Width="80"
                             ScrollViewer.HorizontalScrollBarVisibility="Hidden"                             
                             Foreground="#223843"
                             FontSize="30"/>
                        <Label x:Name="MinutesText" 
                       Content="minutes"
                       FontSize="30" 
                        HorizontalContentAlignment="Center" 
                        VerticalContentAlignment="Center" 
                        Foreground="#223843"/>
                        <ListBox x:Name="SecondsList"
                             d:ItemsSource="{d:SampleData ItemCount=5}"
                             Grid.Column="1"
                             Grid.Row="1"
                             Width="80"
                             ScrollViewer.HorizontalScrollBarVisibility="Hidden"                             
                             Foreground="#223843"
                             FontSize="30"/>
                        <Label x:Name="SecondsText" 
                       Content="seconds"
                       FontSize="30" 
                        HorizontalContentAlignment="Center" 
                        VerticalContentAlignment="Center" 
                        Foreground="#223843"/>
                    </StackPanel>
                    <Label x:Name="Progress"
                       FontSize="30"
                       Grid.Row="2"
                       Content="00:00:00"
                       HorizontalContentAlignment="Center"
                       VerticalAlignment="Center"
                       Foreground="#223843"/>
                </Grid>
                <Button x:Name="startAppButton"
                Content="Start"
                Grid.Row="3" Width="160" 
                Height="60"                 
                Click="startAppButton_Click" 
                Style="{DynamicResource startAppButtonTheme}"/>
                <CheckBox x:Name="ToggleTimerButton"
                          Content="Toggle Timer"
                          Grid.Row="3"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Left"
                          FontSize="24" 
                          Checked="ToggleTimerButton_Checked"
                          Unchecked="ToggleTimerButton_Unchecked"
                          Width="200px"
                          Margin="25px 0px 0px 0px"/>
            </Grid>
            <Grid x:Name="selectGrid"              
                  Visibility="Hidden"
                  VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="60"/>
                </Grid.RowDefinitions>
                <Label x:Name="expLabel1" Grid.Column="0" Grid.Row="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Content="Select App Here" FontSize="20" Foreground="#223843"/>
                <Label x:Name="expLabel2" Grid.Column="1" Grid.Row="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Content="Delete App Here" FontSize="20" Foreground="#223843"/>
                <ListBox x:Name="appAddListBox" Grid.Column="0" Grid.Row="1" Width="300" Height="180" VerticalAlignment="Top" FontSize="24" SelectionChanged="appAddListBox_SelectionChanged" Foreground="#223843" BorderThickness="0"/>
                <ListBox x:Name="appDelListBox" Grid.Column="1" Grid.Row="1" Width="300" Height="180" VerticalAlignment="Top" FontSize="24" SelectionChanged="appDelListBox_SelectionChanged" Foreground="#223843" BorderThickness="0"/>
                <Button x:Name="updateButton"
                Content="Update"
                Grid.Row="2"
                Grid.Column="0"
                Click="updateButton_Click"
                Style="{DynamicResource UpdateButtonTheme}"/>
            </Grid>
            <Frame BorderBrush="#223843" BorderThickness="2 2 0 0" Navigated="Frame_Navigated"/>            
        </Grid>
        <Grid x:Name="TutorialGrid1"
              Grid.ColumnSpan="3"
              Grid.RowSpan="5"
              Visibility="Hidden">
            <Label Opacity="0.4" Background="Black"/>
            <Image Source="Resources/tutorial1.png"
                   Width="600"/>
            <Button x:Name="Ok1" Content="Ok" Click="Ok1_Click"
                    Style="{DynamicResource OkButtonTheme}"/>
        </Grid>
        <Grid x:Name="TutorialGrid2"
              Grid.ColumnSpan="3"
              Grid.RowSpan="5"
              Visibility="Hidden">
            <Label Opacity="0.4" Background="Black"/>
            <Image Source="Resources/tutorial2.png"
                   Width="600"/>
            <Button x:Name="Ok2" Content="Ok" Click="Ok2_Click"
                    Style="{DynamicResource OkButtonTheme}"/>
        </Grid>
    </Grid>
</Window>
